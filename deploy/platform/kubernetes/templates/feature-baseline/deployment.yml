#  Copyright 2025 SkyAPM org
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

{{- if .Values.features.baseline.enabled }}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: predictor-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      # PVC storage size
      storage: "10Gi"

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: skywalking-predictor
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      name: skywalking-predictor
  template:
    metadata:
      labels:
        name: skywalking-predictor
    spec:
      containers:
        - name: skywalking-predictor
          image: {{ .Values.features.baseline.image }}
          ports:
            - containerPort: 18080
              name: grpc
            - containerPort: 8000
              name: prometheus
          env:
            - name: BASELINE_FETCH_SERVER_ENDPOINT
              value: {{ template "skywalking.oap.address.http" . }}
            - name: BASELINE_FETCH_CRON
              value: "10 */8 * * *"
            - name: BASELINE_FETCH_METRICS
              value: "service_resp_time,service_sla,service_cpm,service_percentile,service_apdex"
            - name: BASELINE_FETCH_SERVER_LAYERS
              value: "GENERAL,MESH"
            - name: LOGGING_LEVEL
              value: DEBUG
          livenessProbe:
            initialDelaySeconds: 30
            periodSeconds: 30
            tcpSocket:
              port: grpc
            timeoutSeconds: 1
          volumeMounts:
            - mountPath: /predictor-data
              name: predictor-data
      volumes:
        - name: predictor-data
          persistentVolumeClaim:
            claimName: predictor-data

---

apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.skywalking.fullnameOverride }}-baseline
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    name: skywalking-predictor
  ports:
    - port: 18080
      protocol: TCP
      targetPort: grpc

{{- end }}
